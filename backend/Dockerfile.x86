# Use Ubuntu-based images for better compatibility
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
WORKDIR /src

# Copy csproj files and restore dependencies
COPY ["Qivr.Api/Qivr.Api.csproj", "Qivr.Api/"]
COPY ["Qivr.Core/Qivr.Core.csproj", "Qivr.Core/"]
COPY ["Qivr.Infrastructure/Qivr.Infrastructure.csproj", "Qivr.Infrastructure/"]
COPY ["Qivr.Services/Qivr.Services.csproj", "Qivr.Services/"]
RUN dotnet restore "Qivr.Api/Qivr.Api.csproj"

# Copy source code and build
COPY . .
WORKDIR "/src/Qivr.Api"
RUN dotnet build "Qivr.Api.csproj" -c Release -o /app/build

# Publish
RUN dotnet publish "Qivr.Api.csproj" -c Release -o /app/publish /p:UseAppHost=false

# Runtime stage
FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS final
WORKDIR /app

# Install curl for health checks
RUN apt-get update && apt-get install -y curl && rm -rf /var/lib/apt/lists/*

# Copy published app
COPY --from=build /app/publish .

# Set environment variables
ENV ASPNETCORE_URLS=http://+:8080 \
    ASPNETCORE_ENVIRONMENT=Production \
    DOTNET_RUNNING_IN_CONTAINER=true

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Expose port
EXPOSE 8080

ENTRYPOINT ["dotnet", "Qivr.Api.dll"]
